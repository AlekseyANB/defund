syntax = "proto3";
package defundhub.defund.query;

import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "query/interquery.proto";
// this line is used by starport scaffolding # 1
import "gogoproto/gogo.proto";

option go_package = "github.com/defundhub/defund/x/query/types";

// Query defines the gRPC querier service.
service Query {
    // Queries a interquery by index.
	rpc Interquery(QueryGetInterqueryRequest) returns (QueryGetInterqueryResponse) {
		option (google.api.http).get = "/defundhub/defund/query/interquery/{index}";
	}

	// Queries a list of interquery items.
	rpc InterqueryAll(QueryAllInterqueryRequest) returns (QueryAllInterqueryResponse) {
		option (google.api.http).get = "/defundhub/defund/query/interquery";
	}

// this line is used by starport scaffolding # 2
}

message QueryGetInterqueryRequest {
	  string index = 1;

}

message QueryGetInterqueryResponse {
	Interquery interquery = 1 [(gogoproto.nullable) = false];
}

message QueryAllInterqueryRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllInterqueryResponse {
	repeated Interquery interquery = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// this line is used by starport scaffolding # 3
